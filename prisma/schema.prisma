// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  username     String?
  password     String?
  isActive     Boolean?      @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  draw         Draw[]
  wheel        Wheel[]
  randomPrize  DrawPrize[]
  wheelPrize   WheelPrize[]
  drawWinners  DrawReport[]
  wheelWinners WheelReport[]

  @@map("users")
}

model Draw {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  userId          String       @db.ObjectId
  slug            String       @unique
  title           String       @unique
  prizeCap        Int
  dataset         String?
  backgroundImage String?
  loadingImage    String?
  device          String?      @default("desktop")
  isComplete      Boolean      @default(false)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  createdBy       User         @relation(fields: [userId], references: [id])
  prizes          DrawPrize[]
  winners         DrawReport[]

  @@map("draw")
}

model Wheel {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  userId     String        @db.ObjectId
  slug       String        @unique
  title      String        @unique
  baseIcon   String?
  isComplete Boolean       @default(false)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  createdBy  User          @relation(fields: [userId], references: [id])
  prizes     WheelPrize[]
  winners    WheelReport[]

  @@map("wheel")
}

model DrawPrize {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  drawId     String       @db.ObjectId
  userId     String       @db.ObjectId
  rank       Int?
  title      String
  amount     Int
  image      String?
  isComplete Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  draw       Draw         @relation(fields: [drawId], references: [id], onDelete: Cascade)
  createdBy  User         @relation(fields: [userId], references: [id])
  winners    DrawReport[]

  @@map("randomPrize")
}

model WheelPrize {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  wheelId    String        @db.ObjectId
  userId     String        @db.ObjectId
  title      String
  amount     Int
  image      String?
  isComplete Boolean       @default(false)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  wheel      Wheel         @relation(fields: [wheelId], references: [id], onDelete: Cascade)
  createdBy  User          @relation(fields: [userId], references: [id])
  winners    WheelReport[]

  @@map("wheelPrize")
}

model DrawReport {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  drawId     String    @db.ObjectId
  prizeId    String    @db.ObjectId
  customerId String?
  name       String
  phone      String
  userId     String    @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  draw       Draw      @relation(fields: [drawId], references: [id])
  prize      DrawPrize @relation(fields: [prizeId], references: [id], onDelete: Cascade)
  createdBy  User      @relation(fields: [userId], references: [id])

  @@map("drawReport")
}

model WheelReport {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  wheelId   String     @db.ObjectId
  prizeId   String     @db.ObjectId
  userId    String     @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  wheel     Wheel      @relation(fields: [wheelId], references: [id])
  prize     WheelPrize @relation(fields: [prizeId], references: [id], onDelete: Cascade)
  createdBy User       @relation(fields: [userId], references: [id])

  @@map("wheelReport")
}
